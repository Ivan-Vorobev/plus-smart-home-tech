spring:
  output:
    ansi:
      enabled: always
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  sql:
    init:
      mode: always
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5433/analyzer
    username: analyzer
    password: analyzer

grpc:
  client:
    hub-router:
      address: 'static://localhost:59090'
      enableKeepAlive: true
      keepAliveWithoutCalls: true
      negotiationType: plaintext

analyzer:
  kafka:
    consumer:
      hub:
        properties:
          client.id: "telemetry.analyzer-hub"
          group.id: "telemetry.analyzer-hub.group"
          bootstrap.servers: localhost:9092
          key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
          value.deserializer: ru.yandex.practicum.avro.deserializer.HubEventDeserializer
          enable.auto.commit: false
      snapshot:
        properties:
          client.id: "telemetry.analyzer-snapshot"
          group.id: "telemetry.analyzer-snapshot.group"
          bootstrap.servers: localhost:9092
          key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
          value.deserializer: ru.yandex.practicum.avro.deserializer.SnapshotEventDeserializer
          enable.auto.commit: false
    topics:
      sensors-events: telemetry.sensors.v1
      hubs-events: telemetry.hubs.v1
      snapshots-events: telemetry.snapshots.v1